
require:
   path
   quasar ->
      cached-function

provide:
   rename, Renamer
   task-function


;;;;;;;;;;;;;
;; RENAMER ;;
;;;;;;;;;;;;;

rename{var {path => p} or p, opts = {=}} =
   rebase = opts.rebase or [opts.from and {opts.from => opts.to or ""}] or {=}
   items{rebase} each {from, to} ->
      rel = path.relative{from, p}
      if not rel.starts-with{"../"}:
         p = path.join{to, rel}
         break
   if opts.extension:
      p = p.replace{R"\.[a-zA-Z0-9]+$", opts.extension}
   p

class _Renamer:
   constructor{@options = {=}} =
      pass
   .rename{p, options = {=}} =
      rename{p, @options & options}

Renamer{options} =
   r = _Renamer{options}
   r.rename.bind{r}



;;;;;;;;;;;;;;;;
;; TASK CACHE ;;
;;;;;;;;;;;;;;;;

task-cache = {=}

task-function{f, transform = null} =
   m = [task-cache[f.to-string{}] or= new Map{}]
   match m.get{transform}:
      undefined? and match is transform ->
         null? ->
            c = cached-function{f}
            m.set{transform, c}
            c
         else ->
            c = cached-function{transform{f}}
            m.set{transform, c}
            c
      task-f ->
         task-f

